import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { getMessages, setRequestLocale } from "next-intl/server";
import { Toaster } from "@/components/ui/sonner";
import { routing } from "@/i18n/routing";
import { ThemeProvider } from "@/contexts/ThemeContext";
import AppProvider from "@/components/app-provider";
import AppProviders from "@/components/providers/app-providers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params
}: Readonly<{ children: React.ReactNode; params: { locale: string } }>) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;

  setRequestLocale(locale)
  const messages = await getMessages();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider locale={locale} messages={messages} >
          <AppProvider>
            <AppProviders>
              <ThemeProvider>
              <Toaster />
              {children}
            </ThemeProvider>
            </AppProviders>
          </AppProvider>

        </NextIntlClientProvider>
      </body>
    </html>
  );
}